{"name": "test_create_other_user", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)", "trace": "start_execution = None\n\n    @pytest.mark.Other\n    def test_create_other_user(start_execution):\n        # Read input Json file\n        # file = open('/users/dmitry/Documents/Today/CreateUser.json', 'r')\n        json_input = file.read()\n>       request_json = json.loads(json_input)\n\nTestCases/test_Create_User.py:40: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/json/__init__.py:357: in loads\n    return _default_decoder.decode(s)\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x10a4fc790>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/json/decoder.py:355: JSONDecodeError"}, "start": 1595648350981, "stop": 1595648350981, "uuid": "64a4769f-c09c-48c5-9823-07ee021f4318", "historyId": "cc584ea40ade5478df0f504d706c484f", "testCaseId": "3ea2ec4547fff5f7e101d0a66e41884a", "fullName": "TestCases.test_Create_User#test_create_other_user", "labels": [{"name": "tag", "value": "Other"}, {"name": "parentSuite", "value": "TestCases"}, {"name": "suite", "value": "test_Create_User"}, {"name": "host", "value": "Dmitrys-MacBook-Pro.local"}, {"name": "thread", "value": "1466-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TestCases.test_Create_User"}]}